[gd_scene load_steps=26 format=2]

[ext_resource path="res://src/Templates/CGHandler.tscn" type="PackedScene" id=2]
[ext_resource path="res://src/Templates/Transition.tscn" type="PackedScene" id=3]
[ext_resource path="res://assets/textures/levels/final/day1/lampost.png" type="Texture" id=4]
[ext_resource path="res://src/Scripts/Layer.gd" type="Script" id=5]
[ext_resource path="res://assets/textures/levels/final/day1/main path.png" type="Texture" id=6]
[ext_resource path="res://src/Templates/Player.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/textures/levels/final/day1/tree 1.png" type="Texture" id=9]
[ext_resource path="res://src/Templates/Objects/Tree.tscn" type="PackedScene" id=10]
[ext_resource path="res://src/Templates/Objects/SignTexts.tscn" type="PackedScene" id=11]
[ext_resource path="res://src/Templates/CanvasTint.tscn" type="PackedScene" id=12]
[ext_resource path="res://src/Templates/ExitNode.tscn" type="PackedScene" id=13]
[ext_resource path="res://src/Templates/Objects/Lamp.tscn" type="PackedScene" id=14]
[ext_resource path="res://assets/textures/levels/final/day1/headge.png" type="Texture" id=15]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

export (bool) var is_top_down := true

onready var player := get_node(\"Characters/%s\" % global.current_player_name)
onready var UI := player.get_node(\"Camera2D/UI\")

# Set up the scene
func _ready() -> void:
	# Reset the reference to camera for the MSG_Parser 
	MSG.camera = get_node('Characters/%s/Camera2D' % global.current_player_name)
	
	# Set global reference variables
	global.set_current_scene(self.name)
	
	# Disable the tint momentarily
	#$BG/Map/CanvasModulate/AnimationPlayer.play_backwards(\"set_tint\")
	
	# Fade in the scene
	$Transition.visible = true
	$Transition.fade_out()
	
	# Start emitting particles
	if $Effects.has_node(\"Particles\"): 
		$Effects/Particles.emit_all()
	
	# Play the level's theme
	#GlobalMusicPlayer.set_music(\"res://assets/music/slow_low.ogg\")
	
	# SAVE DATA HANDLING HERE
	# Usually will set up story stuff based on the save data
	var save_data = global.get_save_data()
	if save_data.has(self.name):
		print(\"Loading from save\")
		
		if save_data[self.name].has(\"dialogue_finished\"):
			if save_data[self.name][\"dialogue_finished\"]:
				global.set_can_talk(true)
		else:
			global.set_can_talk(true)
	
		# Set the position of the player according to the last time 
		# the player was in this scene
		if save_data[self.name].has(\"exit_point\"):
			# Set x and y separately because Vector2 is a Godot thing, not a JSON thing
			player.global_position.x = save_data[self.name][\"exit_point\"][\"position_x\"]
			player.global_position.y = save_data[self.name][\"exit_point\"][\"position_y\"]
			# Disable the exit node the player used previously
			get_node(save_data[self.name][\"exit_point\"][\"exit_node\"]).monitoring = false
			yield(get_tree().create_timer(2.5), \"timeout\")
			get_node(save_data[self.name][\"exit_point\"][\"exit_node\"]).monitoring = true
	else: 
		print(\"Creating new save entry for this level\")
		# Update save data and autosave
		UI.popup_element(\"SaveIndicator\", 3)
		global.set_save_data(\"global\", {
			\"current_scene\": self.filename
		})
		# Create the save entry for the level
		global.set_save_data(self.name, {})
		# Stuff to do
		global.set_can_talk(true)
		if player.interaction_script:
			player.talk()

# Method for other nodes to use
# Fade to black and freeze player input and movement
func change_scene(scene: String, time:=1.5, delay_between_scenes:=1.0) -> void:
	global.set_can_talk(false)
	$Transition.fade_in(time)
	yield(get_tree().create_timer(time+delay_between_scenes), \"timeout\")
	get_tree().change_scene(scene)
"

[sub_resource type="RectangleShape2D" id=2]
extents = Vector2( 346.784, 63.3496 )

[sub_resource type="RectangleShape2D" id=3]
extents = Vector2( 344.365, 42.8159 )

[sub_resource type="RectangleShape2D" id=4]
extents = Vector2( 344.365, 42.8159 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 346.784, 91.3719 )

[sub_resource type="RectangleShape2D" id=6]
extents = Vector2( 344.365, 42.8159 )

[sub_resource type="RectangleShape2D" id=7]
extents = Vector2( 44.3336, 58.813 )

[sub_resource type="RectangleShape2D" id=8]
extents = Vector2( 212.837, 153.448 )

[sub_resource type="GDScript" id=9]
script/source = "extends Area2D

export (String, FILE) var exit_scene

export (String, FILE) var interaction_script

# Connect signals 
func _ready() -> void:
	self.connect(\"body_entered\", self, \"_on_body_entered\")

# Dialogue handler
func talk() -> void:
#	print(\"talking to \" + self.name)
	if interaction_script:
		global.set_can_talk(false)
		MSG.start_dialogue(interaction_script, self)
	else:
		print(\"No dialogue found for the player\")

# Exit function
func _on_body_entered(body: PhysicsBody2D) -> void:
	if body as KinematicBody2D and body.name == global.current_player_name:
		if global.temp_variables.has(\"has_delivery\"):
			if global.temp_variables[\"has_delivery\"]:
				var current_root := body.get_parent().get_parent()
				# Track the exit points in the save file
				global.append_save_data(current_root.name, \"exit_point\", {
					\"position_x\": body.position.x,
					\"position_y\": body.position.y,
					\"exit_node\": self.get_path()
				})
				current_root.change_scene(exit_scene)
		else:
			# Start an exit dialogue if specified
			if interaction_script:
				talk()
"

[sub_resource type="GDScript" id=10]
script/source = "extends Area2D

export (String, FILE) var exit_scene

export (String, FILE) var interaction_script

# Connect signals 
func _ready() -> void:
	self.connect(\"body_entered\", self, \"_on_body_entered\")

# Dialogue handler
func talk() -> void:
#	print(\"talking to \" + self.name)
	if interaction_script:
		global.set_can_talk(false)
		MSG.start_dialogue(interaction_script, self)
	else:
		print(\"No dialogue found for the player\")

# Exit function
func _on_body_entered(body: PhysicsBody2D) -> void:
	if body as KinematicBody2D and body.name == global.current_player_name:
		if global.temp_variables.has(\"court_finished\"):
			if global.temp_variables[\"court_finished\"]:
				var current_root := body.get_parent().get_parent()
				# Track the exit points in the save file
				global.append_save_data(current_root.name, \"exit_point\", {
					\"position_x\": body.position.x,
					\"position_y\": body.position.y,
					\"exit_node\": self.get_path()
				})
				current_root.change_scene(exit_scene)
		else:
			# Start an exit dialogue if specified
			if interaction_script:
				talk()
				#yield(global, \"dialogue_finished\")
"

[sub_resource type="RectangleShape2D" id=11]
extents = Vector2( 41.4747, 63.2808 )

[sub_resource type="GDScript" id=12]
script/source = "extends KinematicBody2D

# Export key variables for easy editing 
export (Color) var color # COLOR OF THE TEXT

export (float, 0.0, 1.9) var voice_pitch # HOW HIGH / LOW THE VOICE IS

export (String, FILE) var interaction_script # A JSON DIALOGUE FILE

# Initialize variables
# Default scale = 35
const SCALE := 50
const ACCELERATION := 200 * SCALE
const MAX_SPEED := 500 * SCALE

onready var motion := Vector2(0, 0)
onready var player_animation := $Sprite
# Store the direction the player's hearding towards to set the animation correctly
onready var current_direction := 0
onready var area := $InteractableArea
onready var UI := $Camera2D/UI
onready var shake_amount := 3.0
# Initializeer
# Connect the interactable area's signals to interaction handlers
func _ready() -> void:
	# Reset the reference to camera for the MSG_Parser 
	MSG.camera = $Camera2D
	# Set camera limit according to level's size
	#$Camera2D.limit_right = get_node(\"../../BG/Map\").get_texture().get_size().x * get_node(\"../../BG/Map\").scale.x
	#$Camera2D.limit_bottom = get_node(\"../../BG/Map\").get_texture().get_size().y * get_node(\"../../BG/Map\").scale.y
# warning-ignore:return_value_discarded
	area.connect(\"area_entered\", self, \"_on_InteractableArea_entered\")
# warning-ignore:return_value_discarded
	area.connect(\"area_exited\", self, \"_on_InteractableArea_exited\")
# warning-ignore:return_value_discarded
	self.connect(\"tree_exited\", self, \"_on_tree_exited\")


# Dialogue handler
func talk() -> void:
#	print(\"talking to \" + self.name)
	if interaction_script:
		global.set_can_talk(false)
		MSG.start_dialogue(interaction_script, self)
	else:
		print(\"No dialogue found for the player\")


# Interaction with NPCs and objects handler
func _on_InteractableArea_entered(body: Area2D) -> void:
	global.set_current_body(body)
	# Show talk bubble if body can be talked to
	if body.get_parent() as KinematicBody2D:
		if body.get_parent().interaction_script:
			$TalkBubble.play_animation()
func _on_InteractableArea_exited(_body: Area2D) -> void:
	global.set_current_body(null)
	# Hide talk bubble
	if $TalkBubble.modulate.a != 0:
		$TalkBubble.stop_animation()

# Input handler
func _physics_process(delta) -> void:
	# Shake the camera
#	if global.shake_camera:
#		$Camera2D.set_offset(Vector2( 
#			rand_range(-1.0, 1.0) * shake_amount, 
#			rand_range(-1.0, 1.0) * shake_amount 
#		))
#	else:
#		$Camera2D.set_offset(Vector2(0, 0))
		
	# Open game settings when ESC is pressed
	if Input.is_action_just_pressed(\"open_settings\"):
		if not UI.get_node(\"Settings/Popup\").visible:
			# Freeze player movement
			if global.get_can_talk():
				global.set_can_talk(false)
				UI.popup_element(\"Settings\")
		else:
			if not global.get_can_talk():
				global.set_can_talk(true, false)
				UI.hide_element(\"Settings\")
	
	# Check whether player is in dialogue
	# If in dialogue then freeze all movement until dialogue is finished
	if global.get_can_talk():
		# Interaction Input
		if Input.is_action_just_pressed(\"interact\") and global.get_current_body() != null:
			if global.get_current_body().get_parent() as KinematicBody2D:
				print(\"Talk to \" + global.get_current_body().get_parent().name)
				# get the parent of the area2d which is the Kinematic2D node and use the talk() method
				global.get_current_body().get_parent().talk()
		# Sideway motion
		if Input.is_action_pressed(\"ui_right\"):
			motion.x = min(motion.x + ACCELERATION, MAX_SPEED)
			player_animation.play(\"walking\")
			player_animation.flip_h = true
			current_direction = 2
		elif Input.is_action_pressed(\"ui_left\"):
			motion.x = max(motion.x - ACCELERATION, -MAX_SPEED)
			player_animation.play(\"walking\")
			player_animation.flip_h = false
			current_direction = 2
		else:
			# TODO: Fix jittering after stopping
			motion.x = lerp(motion.x, 0.0, 1)
		# check for top-down movement 
		if global.get_top_down(): 
			if Input.is_action_pressed(\"ui_up\"):
				motion.y = max(motion.y - ACCELERATION, -MAX_SPEED)
				player_animation.play(\"walking\")
				current_direction = -1
			elif Input.is_action_pressed(\"ui_down\"):
				motion.y = min(motion.y + ACCELERATION, MAX_SPEED)
				player_animation.play(\"walking\")
				current_direction = 1
			else:
				#motion.x = lerp(motion.x, 0, 0.2)   adds a bit of inertia when stopped
				motion.y = 0
		# Play idle animation based on current direction if standing still
		# 0 is idle
		# 1 is forward
		# -1 is backward
		# 2 is sideways
		if motion == Vector2(0, 0):
			match(current_direction):
				-1:
					player_animation.play(\"idle_front\")
				0:
					player_animation.play(\"idle_front\")
				1:
					player_animation.play(\"idle_front\")
				2:
					player_animation.play(\"idle_front\")
	else:
		motion = Vector2(0, 0)
		match(current_direction):
			-1:
				player_animation.play(\"idle_front\")
			0:
				player_animation.play(\"idle_front\")
			1:
				player_animation.play(\"idle_front\")
			2:
				player_animation.play(\"idle_front\")
		# Advance the dialog when dialogue is happening
		if Input.is_action_just_pressed(\"dialogue_next\"):
			# Check if the settings menu is open
			if UI.get_node(\"Settings/Popup\").visible:
				return
			# if menu hidden then it means that there is a dialogue happening
			MSG.next()

	# move with 'motion' speed, the up direction is y=1, and stop on slopes
# warning-ignore:return_value_discarded
	move_and_slide(motion * delta)

# Clear signal connections when the scene ends
func _on_tree_exited() -> void:
	area.disconnect(\"area_entered\", self, \"_on_InteractableArea_entered\")
	area.disconnect(\"area_exited\", self, \"_on_InteractableArea_exited\")


"

[node name="MainPath2" type="Node2D" groups=[
"level_root",
]]
script = SubResource( 1 )

[node name="BG" type="Node2D" parent="."]

[node name="Map" type="Sprite" parent="BG"]
texture = ExtResource( 6 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="Map2" type="Sprite" parent="BG"]
position = Vector2( 0.902, 1075 )
texture = ExtResource( 6 )
centered = false

[node name="Bounds" type="StaticBody2D" parent="BG"]
scale = Vector2( 0.333333, 0.333333 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="BG/Bounds"]
polygon = PoolVector2Array( -200.806, 6701.61, 6030.61, 6676.39, 5921.29, 6.64367, 5787.4, 23.3807, 5784.04, 2409.91, 5778.33, 6474.56, 38.8642, 6474.56, 11.7534, 1957.99, 0, 0, -128, 0 )

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="BG/Bounds"]
polygon = PoolVector2Array( -128, -128, 5904.56, -127.253, 5904.56, -10.0933, -128, 0 )

[node name="Hedges" type="Node2D" parent="BG"]

[node name="Hedge2" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 351.632, 1747.82 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge2"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge2"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge2"]
position = Vector2( -15.9999, 1 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge2/LayerSystem"]
shape = SubResource( 3 )

[node name="Hedge3" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 351.632, 1509.82 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge3"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge3"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge3"]
position = Vector2( -15.9999, 1 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge3/LayerSystem"]
shape = SubResource( 4 )

[node name="Hedge4" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 1587.98, 1692.18 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge4"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge4"]
position = Vector2( -11.9964, 43.2607 )
shape = SubResource( 5 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge4"]
position = Vector2( -15.9999, 1 )
monitoring = false
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge4/LayerSystem"]
shape = SubResource( 4 )

[node name="Hedge5" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 1587.98, 1982.72 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge5"]
z_index = 10
z_as_relative = false
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge5"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge5"]
position = Vector2( -15.9999, 1 )
monitoring = false
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge5/LayerSystem"]
shape = SubResource( 4 )

[node name="Hedge9" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 351.632, 659.012 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge9"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge9"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge9"]
position = Vector2( -15.9999, 1 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge9/LayerSystem"]
shape = SubResource( 6 )

[node name="Hedge8" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 351.632, 421.016 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge8"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge8"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge8"]
position = Vector2( -15.9999, 1 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge8/LayerSystem"]
shape = SubResource( 4 )

[node name="Hedge7" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 1587.98, 603.377 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge7"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge7"]
position = Vector2( -11.9964, 43.2607 )
shape = SubResource( 5 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge7"]
position = Vector2( -15.9999, 1 )
monitoring = false
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge7/LayerSystem"]
shape = SubResource( 4 )

[node name="Hedge6" type="StaticBody2D" parent="BG/Hedges"]
position = Vector2( 1587.98, 893.918 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Hedges/Hedge6"]
texture = ExtResource( 15 )

[node name="q" type="CollisionShape2D" parent="BG/Hedges/Hedge6"]
position = Vector2( -16.4284, 68.7454 )
shape = SubResource( 2 )

[node name="LayerSystem" type="Area2D" parent="BG/Hedges/Hedge6"]
position = Vector2( -15.9999, 1 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Hedges/Hedge6/LayerSystem"]
shape = SubResource( 4 )

[node name="Lamps" type="Node2D" parent="BG"]

[node name="Lamp1" type="StaticBody2D" parent="BG/Lamps"]
position = Vector2( 1229.94, 1901.8 )
rotation = -3.14159
scale = Vector2( 1, -1 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Lamps/Lamp1"]
texture = ExtResource( 4 )

[node name="q" type="CollisionShape2D" parent="BG/Lamps/Lamp1"]
position = Vector2( 63.506, 156.612 )
shape = SubResource( 7 )

[node name="LayerSystem" type="Area2D" parent="BG/Lamps/Lamp1"]
position = Vector2( -38.1605, -68.8059 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Lamps/Lamp1/LayerSystem"]
position = Vector2( 11.0803, -52.0773 )
shape = SubResource( 8 )

[node name="Lamp3" type="StaticBody2D" parent="BG/Lamps"]
position = Vector2( 1231.99, 508.648 )
rotation = -3.14159
scale = Vector2( 1, -1 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Lamps/Lamp3"]
texture = ExtResource( 4 )

[node name="q" type="CollisionShape2D" parent="BG/Lamps/Lamp3"]
position = Vector2( 62.6583, 141.066 )
shape = SubResource( 7 )

[node name="LayerSystem" type="Area2D" parent="BG/Lamps/Lamp3"]
position = Vector2( -38.1605, -68.8059 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Lamps/Lamp3/LayerSystem"]
position = Vector2( 11.0803, -52.0773 )
shape = SubResource( 8 )

[node name="Lamp" parent="BG/Lamps" instance=ExtResource( 14 )]

[node name="Lamp2" type="StaticBody2D" parent="BG/Lamps"]
position = Vector2( 672.596, 322.281 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Lamps/Lamp2"]
texture = ExtResource( 4 )

[node name="q" type="CollisionShape2D" parent="BG/Lamps/Lamp2"]
position = Vector2( 61.606, 142.008 )
shape = SubResource( 7 )

[node name="LayerSystem" type="Area2D" parent="BG/Lamps/Lamp2"]
position = Vector2( -38.1605, -68.8059 )
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="BG/Lamps/Lamp2/LayerSystem"]
position = Vector2( 11.0803, -52.0773 )
shape = SubResource( 8 )

[node name="ExitNodes" type="Node2D" parent="BG"]

[node name="ExitNode" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 12.6144, 1669.28 )
rotation = -1.51655
monitoring = false
exit_scene = "res://src/Scenes/Jam/Day2/ApartmentHallway.tscn"

[node name="ExitNode5" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 941.519, 2188.13 )
rotation = -3.07243
scale = Vector2( 2.69893, 3.47165 )
exit_scene = "res://src/Scenes/Jam/Day2/ParkPath.tscn"

[node name="ExitNode2" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 1.79932, 598.233 )
rotation = -1.51655
script = SubResource( 9 )
exit_scene = "res://src/Scenes/Jam/Day2/Villas.tscn"
interaction_script = "res://assets/dialogues/jam/day1/VillasBlocked.json"

[node name="t" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 961.831, 11.0752 )
rotation = -3.14159
scale = Vector2( 2.30168, 0.965071 )
exit_scene = "res://src/Scenes/Jam/Day2/SquareCrowded.tscn"

[node name="Church" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 1908.86, 793.255 )
rotation = -1.51655
script = SubResource( 10 )
interaction_script = "res://assets/dialogues/jam/day2/ChurchClosed.json"

[node name="Indutrsy" parent="BG/ExitNodes" instance=ExtResource( 13 )]
position = Vector2( 1905.26, 1874.76 )
rotation = -1.51655
exit_scene = "res://src/Scenes/Jam/Day2/IndustrialGate.tscn"

[node name="Tree" type="StaticBody2D" parent="BG"]
position = Vector2( 1171.36, 1201.53 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree2" type="StaticBody2D" parent="BG"]
position = Vector2( 636.984, 2142.84 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree2"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree2"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree2"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree2/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree4" type="StaticBody2D" parent="BG"]
position = Vector2( 1835, 2078.24 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree4"]
z_index = 100
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree4"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree4"]
monitoring = false
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree4/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree13" type="StaticBody2D" parent="BG"]
position = Vector2( 1835, 2078.24 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree13"]
z_index = 100
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree13"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree13"]
monitoring = false
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree13/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree3" type="StaticBody2D" parent="BG"]
position = Vector2( 177.631, 2311.98 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree3"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree3"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree3"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree3/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree5" type="StaticBody2D" parent="BG"]
position = Vector2( 504.652, 1041.32 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree5"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree5"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree5"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree5/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree9" type="StaticBody2D" parent="BG"]
position = Vector2( 1654.66, 219.37 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree9"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree9"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree9"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree9/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree10" type="StaticBody2D" parent="BG"]
position = Vector2( 1315.78, 28.3032 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree10"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree10"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree10"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree10/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree11" type="StaticBody2D" parent="BG"]
position = Vector2( 183.805, 89.5887 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree11"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree11"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree11"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree11/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree12" type="StaticBody2D" parent="BG"]
position = Vector2( 522.677, -72.6375 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree12"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree12"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree12"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree12/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree6" type="StaticBody2D" parent="BG"]
position = Vector2( 179.028, 1136.46 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree6"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree6"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree6"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree6/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="Tree7" parent="BG" instance=ExtResource( 10 )]

[node name="Tree8" type="StaticBody2D" parent="BG"]
position = Vector2( 1460.92, 1377.22 )
__meta__ = {
"_edit_group_": true
}

[node name="Sprite" type="Sprite" parent="BG/Tree8"]
texture = ExtResource( 9 )

[node name="BodyShape" type="CollisionShape2D" parent="BG/Tree8"]
position = Vector2( 1.45752, 171.388 )
shape = SubResource( 11 )

[node name="LayerSystem" type="Area2D" parent="BG/Tree8"]
monitorable = false
script = ExtResource( 5 )

[node name="CollisionShape2D" type="CollisionPolygon2D" parent="BG/Tree8/LayerSystem"]
polygon = PoolVector2Array( -26.8115, -255.627, -48.4714, -246.602, -48.4714, -246.602, -147.746, 67.4667, -123.379, 99.9567, -51.179, 116.202, 50.8032, 115.299, 112.173, 102.664, 132.93, 62.9542, 132.93, 62.9542, 10.1909, -244.797, 10.1909, -244.797 )

[node name="SignTexts" parent="BG" instance=ExtResource( 11 )]

[node name="Characters" type="Node2D" parent="."]

[node name="Evan" parent="Characters" instance=ExtResource( 8 )]
position = Vector2( 983.898, 1617.24 )
script = SubResource( 12 )
color = Color( 0, 0, 0, 1 )

[node name="Camera2D" parent="Characters/Evan" index="0"]
limit_right = 1920
limit_bottom = 2160

[node name="Effects" type="Node2D" parent="."]

[node name="CGHandler" parent="." instance=ExtResource( 2 )]

[node name="Transition" parent="." instance=ExtResource( 3 )]

[node name="CanvasModulate" parent="." instance=ExtResource( 12 )]
visible = false
color = Color( 0.0666667, 0.117647, 0.298039, 1 )

[editable path="Characters/Evan"]
