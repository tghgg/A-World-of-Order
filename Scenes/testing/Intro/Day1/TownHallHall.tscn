[gd_scene load_steps=14 format=2]

[ext_resource path="res://src/Templates/CanvasTint.tscn" type="PackedScene" id=1]
[ext_resource path="res://assets/textures/light/light.png" type="Texture" id=2]
[ext_resource path="res://src/Templates/Player.tscn" type="PackedScene" id=3]
[ext_resource path="res://src/Templates/Character.tscn" type="PackedScene" id=4]
[ext_resource path="res://src/Templates/Effects/Moonlight.tscn" type="PackedScene" id=5]
[ext_resource path="res://src/Templates/CGHandler.tscn" type="PackedScene" id=6]
[ext_resource path="res://src/Templates/Transition.tscn" type="PackedScene" id=7]
[ext_resource path="res://src/Templates/ExitNode.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/textures/levels/testing/townhall_hall.png" type="Texture" id=9]

[sub_resource type="GDScript" id=1]
script/source = "extends Node2D

export (bool) var is_top_down := true

onready var player := get_node(\"Characters/%s\" % global.current_player_name)
onready var UI := player.get_node(\"Camera2D/UI\")

# Set up the scene
func _ready() -> void:
	# Reset the reference to camera for the MSG_Parser 
	MSG.camera = get_node('Characters/%s/Camera2D' % global.current_player_name)
	# Set global reference variables
	global.set_current_scene(self.name)
	global.set_can_talk(true)
	
	# Disable the tint momentarily
	#$BG/Map/CanvasModulate/AnimationPlayer.play_backwards(\"set_tint\")
	
	# Fade in the scene
	$Transition.visible = true
	$Transition.fade_out()
	
	# Start emitting particles
	if self.has_node(\"Particles\"): 
		$Particles.emit_all()

	# Play the level's theme
	#GlobalMusicPlayer.set_music(\"res://assets/music/slow_low.ogg\")
	
	# Set the position of the player according to the last time 
	# the player was in this scene
	if (global.player_exit_points.has(self.name)):
		player.global_position = global.player_exit_points[self.name].position
		# Disable the exit node the player used previously
		get_node(global.player_exit_points[self.name].exit_node).monitoring = false
		yield(get_tree().create_timer(3.0), \"timeout\")
		get_node(global.player_exit_points[self.name].exit_node).monitoring = true
	
	# SAVE DATA HANDLING HERE
	# Usually will set up story stuff based on the save data
	var save_data = global.get_save_data()
	if save_data.has(self.name):
		print(\"Loading from save\")
		if not save_data[self.name][\"dialogue_finished\"]:
			player.get_node(\"PlayerMovement\").play(\"walk_in\")
			player.talk()
	else: 
		print(\"Creating new save entry for this level\")
		# Update save data and autosave
		UI.popup_element(\"SaveIndicator\", 3)
		global.set_save_data(\"global\", {
			\"current_scene\": self.filename
		})
		player.talk()
		player.get_node(\"PlayerMovement\").play(\"walk_in\")
		yield(global, \"dialogue_finished\")
		global.set_save_data(self.name, {
			\"dialogue_finished\": true,
			\"current_position\": player.get_global_position()
		})
		# Stuff to do

# Method for other nodes to use
# Fade to black and freeze player input and movement
func change_scene(scene: String, time:=1.5, delay_between_scenes:=1.0) -> void:
	global.set_can_talk(false)
	$Transition.fade_in(time)
	yield(get_tree().create_timer(time+delay_between_scenes), \"timeout\")
	get_tree().change_scene(scene)
"

[sub_resource type="GDScript" id=2]
script/source = "extends Area2D

export (String, FILE) var exit_scene

# Connect signals 
func _ready() -> void:
	self.connect(\"body_entered\", self, \"_on_body_entered\")

# Exit function
func _on_body_entered(body: PhysicsBody2D) -> void:
	if body as KinematicBody2D and body.name == global.current_player_name:
		var current_root := body.get_parent().get_parent()
		# Use the root scene the player is in to change the scene
		global.player_exit_points[current_root.name] = {
			\"position\": body.position,
			\"exit_node\": self.get_path()
		}
		# cut to Lady scene if player met Mayor
		var save_data = global.get_save_data()
		print(save_data)
		if save_data.has(\"TownHall\"):
			print('nib2')
			if save_data[\"TownHall\"][\"dialogue_finished\"]:
				print('nib3')
				exit_scene = \"res://src/Scenes/testing/Intro/Lady.tscn\"
		print(exit_scene)
		current_root.change_scene(exit_scene)
"

[sub_resource type="Environment" id=3]
background_mode = 4
glow_bloom = 0.06

[sub_resource type="Animation" id=4]
tracks/0/type = "value"
tracks/0/path = NodePath(".:position")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 951.755, 867.418 ), Vector2( 1238.04, 528.88 ) ]
}

[node name="TownHallHall" type="Node2D" groups=[
"level_root",
]]
script = SubResource( 1 )

[node name="BG" type="Node2D" parent="."]

[node name="Map" type="Sprite" parent="BG"]
texture = ExtResource( 9 )
centered = false
__meta__ = {
"_edit_lock_": true
}

[node name="Bounds" type="StaticBody2D" parent="BG/Map"]
scale = Vector2( 0.333333, 0.333333 )

[node name="CollisionPolygon2D" type="CollisionPolygon2D" parent="BG/Map/Bounds"]
position = Vector2( 0, -7.95008 )
polygon = PoolVector2Array( -89.9983, 3239.79, 5774.47, 3253.09, 5790.37, -14.3994, 3969.8, 17.401, 3993.84, 3114.26, 1776.18, 3105.89, 1759.45, 17.9069, -128, 0 )

[node name="CollisionPolygon2D2" type="CollisionPolygon2D" parent="BG/Map/Bounds"]
polygon = PoolVector2Array( -128, -128, 5776.34, -115.571, 5751.23, -6.78031, -128, 0 )

[node name="ExitNode" parent="BG/Map" instance=ExtResource( 8 )]
position = Vector2( 949.486, 19.1332 )
scale = Vector2( 4.01934, 1.56643 )
exit_scene = "res://src/Scenes/testing/Intro/TownHall.tscn"

[node name="ExitNode2" parent="BG/Map" instance=ExtResource( 8 )]
position = Vector2( 949.486, 1045.3 )
scale = Vector2( 4.01934, 1.56643 )
script = SubResource( 2 )
exit_scene = "res://src/Scenes/testing/Intro/Delivery.tscn"

[node name="WorldEnvironment" type="WorldEnvironment" parent="BG"]
environment = SubResource( 3 )

[node name="Characters" type="Node2D" parent="."]

[node name="Guard" parent="Characters" instance=ExtResource( 4 )]
position = Vector2( 1535.12, 490.623 )
scale = Vector2( 3.24349, 3.24349 )

[node name="Evan" parent="Characters" instance=ExtResource( 3 )]
position = Vector2( 951.755, 867.418 )
interaction_script = "res://assets/dialogues/intro/Town-Hall-Delivery.json"

[node name="PlayerMovement" parent="Characters/Evan" index="6"]
anims/walk_in = SubResource( 4 )

[node name="Effects" type="Node2D" parent="."]

[node name="Light" parent="Effects" instance=ExtResource( 5 )]
position = Vector2( 620.188, 26.3966 )
scale = Vector2( 0.560001, 1 )
texture = ExtResource( 2 )
texture_scale = 1.0
color = Color( 0.596078, 0.596078, 0.596078, 0.392157 )
energy = 1.3

[node name="Light5" parent="Effects" instance=ExtResource( 5 )]
position = Vector2( 1652.18, 474.708 )
scale = Vector2( 0.560001, 1 )
texture = ExtResource( 2 )
texture_scale = 0.5
color = Color( 0.596078, 0.596078, 0.596078, 0.392157 )
energy = 1.3

[node name="Light2" parent="Effects" instance=ExtResource( 5 )]
position = Vector2( 620.188, 721.841 )
scale = Vector2( 0.560001, 1 )
texture = ExtResource( 2 )
texture_scale = 1.0
color = Color( 0.596078, 0.596078, 0.596078, 0.392157 )
energy = 1.3

[node name="Light4" parent="Effects" instance=ExtResource( 5 )]
position = Vector2( 1328, 26.3965 )
scale = Vector2( 0.560001, 1 )
texture = ExtResource( 2 )
texture_scale = 1.0
color = Color( 0.596078, 0.596078, 0.596078, 0.392157 )
energy = 1.3

[node name="Light3" parent="Effects" instance=ExtResource( 5 )]
position = Vector2( 1328, 721.841 )
scale = Vector2( 0.560001, 1 )
texture = ExtResource( 2 )
texture_scale = 1.0
color = Color( 0.596078, 0.596078, 0.596078, 0.392157 )
energy = 1.3

[node name="CGHandler" parent="." instance=ExtResource( 6 )]

[node name="Transition" parent="." instance=ExtResource( 7 )]

[node name="CanvasModulate" parent="." instance=ExtResource( 1 )]
color = Color( 0.294118, 0.309804, 0.305882, 1 )

[editable path="Characters/Guard"]

[editable path="Characters/Evan"]
